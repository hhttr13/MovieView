<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">

	<!-- UserResultMap 설정 -->
	<resultMap id="ReviewResultMap" type="com.spring.movieview.review.model.ReviewVO">
       	<id property="reviewNo" column= "review_no"/>
       	<result property = "movieNo" column="movie_no"/>
       	<result property = "reviewTitle" column = "review_title"/>
       	<result property = "reviewWriter" column = "review_writer" />
       	<result property = "reviewContent" column = "review_content" />
       	<result property = "regDate" column = "reg_date" />
		<result property = "viewCnt" column = "view_cnt" />       	        
    </resultMap>

	<!-- 리뷰 등록 SQL -->
	<insert id="insert">
		INSERT INTO movieview_review 
		(review_title, review_writer, review_content, movie_no) 
		VALUES (#{reviewTitle}, #{reviewWriter}, #{reviewContent}, #{movieNo});
	</insert>
	
	<!-- 목록보기 -->
	<select id="list" resultMap="ReviewResultMap">
		SELECT * FROM movieview_review
	</select>

	<!--  단일 게시물 조회 -->
	<select id="content" resultMap="ReviewResultMap">
		SELECT * FROM movieview_review 
		WHERE review_no = #{reviewNo}
	</select>
	
	<!--  게시물 삭제 -->
	<delete id="delete">
		DELETE FROM movieview_review
		WHERE review_no = #{reviewNo}
	</delete>	
	
	
	<!-- 게시물 수정 -->
	<update id="modify">
        UPDATE movieview_review 
        SET review_title = #{reviewTitle}, review_content = #{reviewContent} 
        WHERE review_no = #{reviewNo}
    </update>
	
	
	<!--  페이지별 게시물 조회 -->
	<select id = "listPaging" resultMap = "ReviewResultMap">
		SELECT * 
		FROM movieview_review 
		WHERE movie_no = #{movieNo}
		ORDER BY review_no DESC
		LIMIT #{pageStart}, #{countPerPage}
	
	</select>
	
	
	 <!-- 총 게시물 수 가져오기 -->
    <select id="countArticles" resultType="int">
        
        SELECT 
            COUNT(review_no) 
        FROM movieview_review
        
    </select>
    
    
    
    <!--  검색된 총 게시물 수 -->
	<select id="countSearchArticles" resultType="int">
		SELECT COUNT(*) 
		FROM movieview_review 
		<include refid="search"/>
	</select>
	
	<!--  검색된 게시물 목록 조회 처리 -->
	<select id="listSearch" resultMap="ReviewResultMap">
		SELECT * 
		FROM movieview_review 
		<include refid="search" />
		ORDER BY review_no DESC
		LIMIT #{criteria.pageStart}, #{criteria.countPerPage}
	</select>
	
	<!-- 중복되는 동적 sql문 처리 -->
	<sql id="search">
		<if test="condition != ''">
			<!--  동적 sql구문 -->
			<if test="condition == 'title'">
			WHERE review_title LIKE CONCAT('%', #{keyword}, '%') AND movie_no =#{movieNo}
			</if>
			<if test="condition == 'writer'">
			WHERE review_writer LIKE CONCAT('%', #{keyword}, '%') AND movie_no =#{movieNo} 
			</if>
			<if test="condition == 'content'">
			WHERE review_content LIKE CONCAT('%', #{keyword}, '%') AND movie_no =#{movieNo}
			</if>
		</if>
		<if test="condition == '' || condition == null">
			WHERE movie_no = #{movieNo}
		</if>
	</sql>
	
	<!--  조회수 처리 -->
	<update id="updateViewCnt">
		UPDATE movieview_review 
		SET view_cnt = view_cnt + 1 
		WHERE review_no = #{reviewNo}
	</update>
	
	
</mapper>








